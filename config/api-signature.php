<?php

/*
|--------------------------------------------------------------------------
| API 签名验证配置
|--------------------------------------------------------------------------
|
| 此配置文件包含 API 签名验证的默认配置。
|
| 使用方式：
| 1. 通过 .env 文件配置（推荐）- 无需发布此文件
| 2. 发布此文件到应用的 config 目录进行高级自定义
|    命令：php artisan vendor:publish --tag=api-signature-config
|
*/

return [
    /*
    |--------------------------------------------------------------------------
    | 签名算法
    |--------------------------------------------------------------------------
    | 支持的算法: md5, sha1, sha256
    | 环境变量: SIGNATURE_ALGORITHM
    |
    | 签名生成规则：
    | 1. 过滤空值（null 和空字符串）
    | 2. 按参数名字符串字典序排序（SORT_STRING）
    | 3. 拼接为 key1=value1&key2=value2 格式
    | 4. 追加 &secret=YOUR_SECRET
    | 5. 使用指定算法计算哈希
    |
    | ⚠️ 注意：客户端实现时必须使用相同的排序规则（字符串排序，大小写敏感）
    */
    'algorithm' => env('API_SIGNATURE_ALGORITHM', 'sha256'),

    /*
    |--------------------------------------------------------------------------
    | 签名密钥
    |--------------------------------------------------------------------------
    | 用于生成和验证签名的密钥，建议使用至少 32 字符的随机字符串
    | 环境变量: SIGNATURE_SECRET
    | ⚠️ 生产环境必须设置此值！
    */
    'secret' => env('API_SIGNATURE_SECRET', ''),

    /*
    |--------------------------------------------------------------------------
    | 签名有效期（秒）
    |--------------------------------------------------------------------------
    | 默认 300 秒（5分钟）
    | 环境变量: SIGNATURE_EXPIRE
    */
    'expire' => env('API_SIGNATURE_EXPIRE', 300),

    /*
    |--------------------------------------------------------------------------
    | Header 中的签名字段名
    |--------------------------------------------------------------------------
    | 客户端需要在请求头中携带此字段
    | 如需自定义，请发布此配置文件后修改
    */
    'header_signature' => 'X-Signature',

    /*
    |--------------------------------------------------------------------------
    | Header 中的时间戳字段名
    |--------------------------------------------------------------------------
    | 客户端需要在请求头中携带此字段（Unix 时间戳）
    */
    'header_timestamp' => 'X-Timestamp',

    /*
    |--------------------------------------------------------------------------
    | Header 中的随机字符串字段名
    |--------------------------------------------------------------------------
    | 客户端需要在请求头中携带此字段（用于防重放攻击）
    */
    'header_nonce' => 'X-Nonce',

    /*
    |--------------------------------------------------------------------------
    | 排除验签的路由
    |--------------------------------------------------------------------------
    | 支持通配符，例如：'api/public/*', 'api/health'
    | 这些路由将不会进行签名验证
    |
    | 示例：
    | 'except' => [
    |     'api/public/*',
    |     'api/health',
    |     'api/ping',
    | ],
    */
    'except' => [
        //
    ],

    /*
    |--------------------------------------------------------------------------
    | HTTP 客户端配置
    |--------------------------------------------------------------------------
    | 这些配置会直接传递给 GuzzleHttp\Client 构造函数
    | 支持所有 Guzzle 的配置选项：
    | @link https://docs.guzzlephp.org/en/stable/request-options.html
    |
    | 常用选项：
    | - timeout: 请求超时时间（秒），0 表示无限等待
    | - connect_timeout: 连接超时时间（秒）
    | - verify: SSL 证书验证，false 禁用，true 启用，或指定 CA 证书路径
    | - proxy: 代理服务器设置
    | - headers: 默认请求头
    | - base_uri: 基础 URL
    |
    | ⚠️ 安全警告：
    | 生产环境必须启用 SSL 证书验证（verify => true）！
    | API 签名只能验证请求的完整性，不能防止传输层的中间人攻击。
    | 只在本地开发环境且使用自签名证书时才禁用验证。
    */
    'http' => [
        'timeout' => env('API_SIGNATURE_HTTP_TIMEOUT', 30),
        'connect_timeout' => env('API_SIGNATURE_HTTP_CONNECT_TIMEOUT', 10),
        
        // ⚠️ 生产环境必须为 true！仅在本地开发使用自签名证书时设为 false
        'verify' => env('API_SIGNATURE_HTTP_VERIFY', true),
    ],
];